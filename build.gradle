plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	asciidoctorExt // asciidoctor를 확장하는 종속성에 대한 구성 선언
}

repositories {
	mavenCentral()
}
ext {
	snippetsDir = file('build/generated-snippets')
//	asciidocVersion = "3.0.1.RELEASE"
}

dependencies {
	// spring rest docs
	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter'
	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트를 위한 세팅
	testImplementation 'org.projectlombok:lombok' // 테스트를 위한 세팅

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// H2
	runtimeOnly 'com.h2database:h2'

	// queryDSL
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	copy{
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

